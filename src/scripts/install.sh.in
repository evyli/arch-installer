#!/bin/bash
#
# Copyright (C) 2017  nytthea <nytthea@member.fsf.org>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

cmd-install() {
    config-read

    category "Start installation procedure"

    state "Update packages"
    pacman -Sy

    state "Bootstrap system"
    local pacstrap_packages=(base)
    pacstrap "$TARGET_DIR" "${pacstrap_packages[@]}"

    state "Update pacman file database"
    target-exec pacman -Fy

    state "Base installation"
    local base_packages=( # late install of base-devel
                          base-devel
                          # maintenance
                          polkit
                          # boot utils
                          btrfs-progs grub
                          # basic user utils
                          rsync vim git
                          # network dependencies
                          iw wpa_supplicant dialog wpa_actiond ifplugd
                          # pacman utils
                          pacman-mirrorlist pkgfile)
    target-install "${base_packages[@]}"

    state "Load pkgfile data"
    target-exec pkgfile -u

    state "Configure locales"
    target-exec sed -i 's/^/#/g' "/etc/locale.gen"
    for locale in "${LOCALES[@]}"; do
        echo "${locale}" >>"$TARGET_DIR/etc/locale.gen"
    done
    target-exec locale-gen

    state "Set ${LOCALES[0]} as main locale"
    echo "LANG=\"$(echo "${LOCALES[0]}" | cut -f 1 -d ' ')\"" >"$TARGET_DIR/etc/locale.conf"

    state "Configure terminal"
    echo "KEYMAP=$KEYMAP" >"$TARGET_DIR/etc/vconsole.conf"
    echo "FONT=$FONT" >>"$TARGET_DIR/etc/vconsole.conf"

    state "Configure zone"
    target-exec rm -f "/etc/localtime"
    target-exec ln -s "/usr/share/zoneinfo/$ZONE" "/etc/localtime"

    state "Configure hardware clock"
    target-exec hwclock --systohc --utc

    state "Generate fstab"
    genfstab -U "$TARGET_DIR" > "$TARGET_DIR/etc/fstab"

    state "Configure hosts and hostname"
    echo "$HOSTNAME" >"$TARGET_DIR/etc/hostname"
    cp "/etc/hosts" "$TARGET_DIR/etc/hosts"
    { echo "127.0.0.1 $HOSTNAME.localdomain $HOSTNAME";
      echo "ff02::1 ip6-allnodes";
      echo "ff02::2 ip6-allrouters"; } >>"$TARGET_DIR/etc/hosts"

    state "Set root password"
    while ! target-exec passwd; do
        sleep 1
    done

    state "Configure sudo"
    target-install "sudo"
    echo "%wheel ALL=(ALL) ALL" >"$TARGET_DIR/etc/sudoers.d/wheel"

    state "Configure mkinitcpio hooks"
    target-config-set-entry "/etc/mkinitcpio.conf" "HOOKS" "\"base udev modconf block keyboard keymap consolefont encrypt lvm2 resume filesystems fsck\""

    state "Configure /boot to be mounted via crypttab"
    local boot_uuid
    boot_uuid="$(blkid "${DEVICE}$BOOT_PARTITION" | sed -n 's/.* UUID=\"\([^\"]*\)\".*/\1/p')"
    if ! grep -qs "$boot_uuid" "$TARGET_DIR/etc/crypttab"; then
        echo "boot UUID=$boot_uuid none luks" >>"$TARGET_DIR/etc/crypttab"
    fi
    sed -i '/boot/ s#^UUID=[0-9a-fA-F-]*#/dev/mapper/boot#g' "$TARGET_DIR/etc/fstab"

    state "Build kernel image"
    target-exec mkinitcpio -p linux

    state "Configure grub"
    local mainpartition_partuuid
    mainpartition_partuuid="$(blkid "${DEVICE}$MAIN_PARTITION" | sed -n 's/.* PARTUUID=\"\([^\"]*\)\".*/\1/p')"
    target-config-set-entry "/etc/default/grub" "GRUB_TIMEOUT" 2
    target-config-set-entry "/etc/default/grub" "GRUB_ENABLE_CRYPTODISK" y
    target-config-set-entry "/etc/default/grub" "GRUB_HIDDEN_TIMEOUT_QUIET" "false"
    target-config-set-entry "/etc/default/grub" "GRUB_HIDDEN_TIMEOUT" 0
    target-config-set-entry "/etc/default/grub" "GRUB_CMDLINE_LINUX_DEFAULT" "\"quiet cryptdevice=/dev/disk/by-partuuid/$mainpartition_partuuid:archlinux root=/dev/mapper/archlinux-root rw lang=en locale=$(echo "${LOCALES[@]}" | cut -f 1 -d ' ') resume=/dev/mapper/archlinux-swap rootflags=subvol=/btrfs/current/ROOT\""

    state "Generate grub configuration"
    mkdir "$TARGET_DIR/boot/grub"
    mkdir "$TARGET_DIR/hostlvm"
    mount --bind /run/lvm "$TARGET_DIR/hostlvm"
    cat > "$TARGET_DIR/configure-grub.sh" <<EOF
#!/bin/bash
ln -s /hostlvm /run/lvm
grub-mkconfig -o /boot/grub/grub.cfg
EOF
    chmod +x "$TARGET_DIR/configure-grub.sh"
    target-exec /configure-grub.sh
    umount "$TARGET_DIR/hostlvm"
    rmdir "$TARGET_DIR/hostlvm"
    rm "$TARGET_DIR/configure-grub.sh"

    state "Install grub"
    target-exec grub-install --target=i386-pc --recheck "$DEVICE" --modules="part_gpt part_msdos"

    state "Optimise pacman"
    target-exec pacman-optimize

    state "Backup the luksheader"
    cryptsetup luksHeaderBackup "${DEVICE}$MAIN_PARTITION" --header-backup-file "$TARGET_DIR/root/root.luksheader"
    cryptsetup luksHeaderBackup "${DEVICE}$BOOT_PARTITION" --header-backup-file "$TARGET_DIR/root/boot.luksheader"

    category "Installation is done"
}
